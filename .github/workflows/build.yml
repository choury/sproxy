name: build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  project: sproxy

jobs:
  build-linux:
    strategy:
      matrix:
        # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
        build_type: [Release, Debug, RelWithDebInfo]
        os: [ubuntu-22.04, ubuntu-20.04]
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: install pkg
      run: sudo apt-get update && sudo apt-get install -y --no-install-recommends  libssl-dev libz-dev libjson-c-dev
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build_type}}

    - name: build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}}
    - if: matrix.build_type == 'Release'
      name: pack
      run: cpack -G DEB -B ${{github.workspace}}/build  --config ${{github.workspace}}/build/CPackConfig.cmake
    - if: matrix.build_type == 'Release'
      name: Upload package
      uses: actions/upload-artifact@v3
      with:
        name: ${{matrix.os}}-deb
        path: build/*.deb
    - if: matrix.build_type == 'Debug'
      name: test
      run: cd ${{github.workspace}}/test && ./test.sh ../build/
      continue-on-error: true
      timeout-minutes: 5
    - if: matrix.build_type == 'Debug'
      name: Upload test log
      uses: actions/upload-artifact@v3
      with:
        name: test-log-${{matrix.os}}
        path: test/*.log
  build-macos:
    strategy:
      matrix:
        # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
        build_type: [Release, Debug, RelWithDebInfo]
        os: [macos-11, macos-12 ]
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: install pkg
      run: brew install openssl json-c coreutils
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl -DCMAKE_BUILD_TYPE=${{matrix.build_type}}

    - name: build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}}
    - if: matrix.build_type == 'Release'
      name: pack
      run: cpack -G TGZ -B ${{github.workspace}}/build  --config ${{github.workspace}}/build/CPackConfig.cmake
    - if: matrix.build_type == 'Release'
      name: Upload package
      uses: actions/upload-artifact@v3
      with:
        name: ${{matrix.os}}-tgz
        path: build/*.gz
    - if: matrix.build_type == 'Debug'
      name: test
      run: cd ${{github.workspace}}/test && ./test.sh ../build/
      continue-on-error: true
      timeout-minutes: 5
    - if: matrix.build_type == 'Debug'
      name: Upload test log
      uses: actions/upload-artifact@v3
      with:
        name: test-log-${{matrix.os}}
        path: test/*.log

